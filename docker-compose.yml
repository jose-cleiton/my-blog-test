version: '2.2'
services:
  
  memcached:
    image: 'memcached:latest'
  nginx:
    image: 'nginx:latest'
    expose:
      - '80'
      - '443'
    depends_on:
      - phpfpm
    networks:
      - default
      - wplocaldocker
    volumes:
      - './wordpress:/var/www/html:cached'
      - './config/nginx/server.conf:/etc/nginx/conf.d/common/_server.conf:cached'
      - './config/nginx/default.conf:/etc/nginx/conf.d/default.conf:cached'
    environment:
      CERT_NAME: my-blog-test
      HTTPS_METHOD: noredirect
      VIRTUAL_HOST: 'my-blog.test,*.my-blog.test'
  phpfpm:
    
    image: wp-php-fpm-dev-8.0-jc
    depends_on:
      - memcached
    networks:
      - default
      - wplocaldocker
    dns:
      - 10.0.0.2
    volumes:
      - './wordpress:/var/www/html:cached'
      - './config/php-fpm/docker-php-ext-xdebug.ini:/etc/php/8.0/fpm/conf.d/docker-php-ext-xdebug.ini:cached'
      - 'wplocaldockerCache:/var/www/.wp-cli/cache:cached'
      - '~/.ssh:/home/jc/.ssh:cached'
      - './config/php-fpm/wp-cli.local.yml:/var/www/.wp-cli/config.yml:cached'
    cap_add:
      - SYS_PTRACE
    environment:
      ENABLE_XDEBUG: 'true'
      PHP_IDE_CONFIG: serverName=my-blog-test
    build:
      dockerfile: php-fpm
      context: .containers
      args:
        PHP_IMAGE: '10up/wp-php-fpm-dev:8.0-ubuntu'
        CALLING_USER: jc
        CALLING_UID: 1000
  frontend:
    build: ./front-end
    ports:
      - 3000:3000
    platform: linux/x86_64
    working_dir: /app-frontend
    
    volumes:
      - ./front-end:/app-frontend:rw
      - /app-frontend/node_modules
    # Os `healthcheck` devem garantir que a aplicação
    # está operacional, antes de liberar o container
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:3000"]  # Caso utilize outra porta interna para o front, altere ela aqui também
      timeout: 10s
      retries: 5

networks:
  wplocaldocker:
    external:
      name: wplocaldocker
volumes:
  wplocaldockerCache:
    external:
      name: wplocaldockerCache
